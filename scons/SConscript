Import('env')

_INCLUDES = [Dir('../libs/include').abspath, Dir('../src').abspath]

_SOURCES = ['Fmodex3DSoundPlayer.cpp', 'FmodexPlayer.cpp']

_SOURCES = [File('../src/' + s).abspath for s in _SOURCES]

_LIBS = ['fmodex']

if env['PLATFORM'] == 'darwin':
	_LIBPATH = [Dir('../libs/lib/osx').abspath]
else:
	_LIBPATH = [] # TODO

env.Append(APP_SOURCES = _SOURCES)
env.Append(CPPPATH = _INCLUDES)
env.Append(LIBS = _LIBS)
env.Append(LIBPATH = _LIBPATH)

import os, time
def action_install_name_tool(target, source, env):
	os.system('install_name_tool %s -change ./libfmodex.dylib @executable_path/libfmodex.dylib'
			% source[0].path)
	f = open(target[0].path, 'w')
	f.write( 'Dummy dependency file created at %4d.%02d.%02d %02dh%02dm%02ds\n' %
			time.localtime()[0:6])
	f.close()

# copy fmodex dylib to app
if (env['PLATFORM'] == 'darwin') and ('APP_TARGET' in env):
	dylib = '/libfmodex.dylib'
	fout = env['APP_TARGET'] + '.app/Contents/MacOS/' + dylib
	fin = _LIBPATH[0] + dylib
	Command('#' + fout, fin, Copy(fout, fin))

	# dummy dependency file for install_name_tool
	aout = '.sconsign_nametool_libfmodex'
	ain =  env['APP_TARGET'] + '.app/Contents/MacOS/' + env['APP_TARGET']
	Command('#' + aout, '#' + ain, action_install_name_tool)
	# make the 'run' target also depend on the dependency file
	env.Alias('run', '#' + aout)

Return('env')

